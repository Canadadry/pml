package svgpath

import (
	"testing"
)

func TestValidateCommand(t *testing.T) {

	tests := []struct {
		program  string
		expected bool
	}{
		{"z", true},
		{"z 234.43804,111.69821", false},
		{"z 234.43804,111.69821 1,2", false},
		{"z 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", false},
		{"Z", true},
		{"Z 234.43804,111.69821", false},
		{"Z 234.43804,111.69821 1,2", false},
		{"Z 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", false},
		{"m", false},
		{"m 234.43804,111.69821", true},
		{"m 234.43804,111.69821 1,2", false},
		{"M", false},
		{"M 234.43804,111.69821", true},
		{"M 234.43804,111.69821 1,2", false},
		{"l", false},
		{"l 234.43804,111.69821", true},
		{"l 234.43804,111.69821 1,2", false},
		{"L", false},
		{"L 234.43804,111.69821", true},
		{"L 234.43804,111.69821 1,2", false},
		{"c ", false},
		{"c 50.21866,26.50627 ", false},
		{"c 50.21866,26.50627 126.75595,-3.87395", false},
		{"c 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", true},
		{"c 50.21866,26.50627 126.75595,-3.87395 50.21866,26.50627 126.75595,-3.87395", false},
		{"c 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", true},
		{"C ", false},
		{"C 50.21866,26.50627 ", false},
		{"C 50.21866,26.50627 126.75595,-3.87395", false},
		{"C 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", true},
		{"C 50.21866,26.50627 126.75595,-3.87395 50.21866,26.50627 126.75595,-3.87395", false},
		{"C 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", true},
		{"q ", false},
		{"q 50.21866,26.50627 ", false},
		{"q 50.21866,26.50627 126.75595,-3.87395", true},
		{"q 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", false},
		{"q 50.21866,26.50627 126.75595,-3.87395 50.21866,26.50627 126.75595,-3.87395", true},
		{"q 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", true},
		{"Q ", false},
		{"Q 50.21866,26.50627 ", false},
		{"Q 50.21866,26.50627 126.75595,-3.87395", true},
		{"Q 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", false},
		{"Q 50.21866,26.50627 126.75595,-3.87395 50.21866,26.50627 126.75595,-3.87395", true},
		{"Q 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621 50.21866,26.50627 126.75595,-3.87395 151.46369,-35.941621", true},
		{"H ", false},
		{"H 10", true},
		{"H 10,10", false},
		{"h ", false},
		{"h 10", true},
		{"h 10,10", false},
		{"V ", false},
		{"V 10", true},
		{"V 10,10", false},
		{"v ", false},
		{"v 10", true},
		{"v 10,10", false},
	}

	for _, tt := range tests {
		l := newLexer(tt.program)
		parser := newParser(l)
		commands, err := parser.parse()
		if err != nil {
			t.Fatalf("[%s] Failed with error : %v", tt.program, err)
		}

		result := validateCommand(commands[0])

		if result != tt.expected {
			t.Fatalf("[%s] exp %v, got %v", tt.program, tt.expected, result)
		}
	}
}
